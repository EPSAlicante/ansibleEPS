*** PAMACCESS Playbook ***

PamAccess playbook 'pamAccess.yml' is able to manage PAM security configuration (specifically '/etc/security/access.conf' file) for all servers (except those belonging to 'nopamAccess' group), in a centralized way. Playbook can update changes at once for all servers, but It can also update just a server or a group, with '--limit serverName' or '--limit groupName' parameters. It checks file syntax before updating. In case of syntax error, it undoes updates.

Changes will be generated using some variables (through a template) to create '/etc/security/access.conf' file for every server.

Variables are defined by default in 'group_vars/all/pamAccess' file. We can overwrite values with groups or hosts files, but it's not a common case because global variables let us to define specific values for groups and hosts.


Command-line execution: 'ansible-playbook pamAccess.yml'

Scope: Playbook will update all server except those belonging to 'nopamAccess' group.

Templates: 'roles/pamAccess/templates/etc/security/access.conf.j2'

Variables:

    * 'pamAccessAllowGlobal' -> '/etc/security/access.conf' file configuration for all servers

      This variable is a list of items to define rules in file with access permission for server, user and origin. Every item has three attributes:  

      - label: This attribute play two roles, on the one side it will be a comment for rule, on the other side it will be the item key. If we want to reference an item List (to delete or overwrite), we'll do using this attribute.

      - users: Users List in string format

      - origins: Origins List (IPs, networks, terminals, etc.) in string format

    All attributes are required. If any of them are not defined, this item will be ignored


    Example:

      pamAccessAllowGlobal:
      - label: Root access from LOCAL
        users: root
        origins: LOCAL
      - label: Manager access
        users: manager
        origins: LOCAL 172.20.40.


    * 'pamAccessAllowGroup' -> '/etc/security/access.conf' file configuration for a specific group. It has two attributes:

      - group: Group name (in inventory)

      - rules: A list of rules in '/etc/security/access.conf' file, with the same attributes and meaning than 'pamAccessAllowGlobal' variable (label, users and origins)

      At this point, we can delete or overwrite global items, this way:

        * Overwrite global items -> Defining label attribute with same string than global item, and the rest of attributes with values we want for this case

        * Delete global items -> Defining label attribute with same string than global item, and nothing more (we must not define the rest of attributes)


      The rest of items defined (with label different than global items) will be added to config file after global items.


      Example:

        pamAccessAllowGroup:
	- group: proxmox
	  rules:
	  - label: Rsync access from Bacula Server
	    users: rsync
	    origins: 127.0.0.1 172.20.3.30


    * 'pamAccessAllowHost' -> '/etc/security/access.conf' file configuration for a specific server. It has two attributes:

      - host: Server name (in inventory)

      - rules: A list of rules in '/etc/security/access.conf' file, with the same attributes and meaning than 'pamAccessAllowGlobal' variable (label, users and origins)

      At this point, we can delete or overwrite global items, this way:

        * Overwrite global or groups items -> Defining label attribute with same string than global or groups item, and the rest of attributes with values we want for this case

        * Delete global or groups items -> Defining label attribute with same string than global or groups item, and nothing more (we must not define the rest of attributes)


      The rest of items defined (with label different than global and groups items) will be added to config file after global and groups items.


      Example:

        pamAccessAllowHost:
	pamAccessAllowHost:
	- host: ansible_server
	  rules:
	  - label: Manager access
	    users: manager
	    origins: 127.0.0.1 172.20.40.100
	  - label: Admins access
	    users: admin wwwadm
	    origins: 127.0.0.1 172.20.40.100


    * 'pamAccessDenyGlobal', 'pamAccessDenyGroup' and 'pamAccessDenyHost' -> '/etc/security/access.conf' file configuration for all servers, a specific group and a specific server, respectively.

      All three variables are identical to 'pamAccessAllowGlobal', 'pamAccessAllowGroup' and 'pamAccessAllowHost' respectively. The only difference between them is that rules (in case of 'pamAccessDeny*' variables) are for deny access instead of allow access.

      These deny rules will be apply in '/etc/security/access.conf' after allow rules.


      Example

        pamAccessDenyGlobal:
        - label: Deny ALL
          users: ALL
          origins: ALL

