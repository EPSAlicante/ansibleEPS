---
# The source code packaged with this file is Free Software, Copyright (C) 2016 by
# Unidad de Laboratorios, Escuela Politecnica Superior, Universidad de Alicante :: <aeps at eps.ua.es>.
# It's licensed under the AFFERO GENERAL PUBLIC LICENSE unless stated otherwise.
# You can get copies of the licenses here: http://www.affero.org/oagpl.html
# AFFERO GENERAL PUBLIC LICENSE is also included in the file called "LICENSE".


# Stopping and disabling services 

- name: Get python version
  shell: echo {{ ansible_python_version }}|cut -d' ' -f2|cut -d'.' -f1,2
  register: pythonVersion
  changed_when: False

- name: Getting Paths
  action: path_EPS
  changed_when: False
  ignore_errors: yes

- name: Check if service exists in Paths
  shell: (echo {{ item if path.daemons[item] is defined else "No" }}) 2>/dev/null executable="/bin/bash"
  register: existService
  with_items: "{{ stopServices }}"
  changed_when: False

- name: Create fact with services not in Paths 
  set_fact:
    noService: "{{ noService|default({}) | combine( {item.item: item.stdout} ) }}"
  with_items: "{{ existService.results }}"
  changed_when: false
  when: item.stdout == "No"

- name: Services not in Paths. Add services to script '/etc/ansible/scripts/path_facts.py'
  debug: msg="Service {{ item }} not in Paths."
  changed_when: False
  with_items: "{{ noService }}"
  when: noService is defined

- name: Be sure systemd are stopped and unabled
  systemd: name={{ path.daemons[item.stdout]['name'] }} state=stopped enabled=false
  changed_when: False
  with_items: "{{ existService.results }}"
  when: item.stdout != "No" and path.daemons[item.stdout]['type'] == "systemctl"

- name: Be sure services are stopped and unabled
  service: name={{ path.daemons[item.stdout]['name'] }} state=stopped enabled=false 
  changed_when: False
  with_items: "{{ existService.results }}"
  when: item.stdout != "No" and path.daemons[item.stdout]['type'] == "service"

- name: Stop daemon and unable
  shell: "{{ path.daemons[item.stdout]['name'] }} stop; ([ \"{{ ansible_os_family }}\" == \"Debian\" ] && update-rc.d -f $(basename {{ path.daemons[item.stdout]['name'] }}) remove) || ([ \"{{ ansible_os_family }}\" == \"RedHat\" ] && chkconfig $(basename {{ path.daemons[item.stdout]['name'] }}) off) executable='/bin/bash'"
  changed_when: False
  with_items: "{{ existService.results }}"
  when: item.stdout != "No" and path.daemons[item.stdout]['type'] == "init" 

